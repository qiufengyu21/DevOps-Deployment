---
- import_playbook: provisioning-vm.yml

- hosts: new_droplet
  gather_facts: no
  remote_user: root
  vars:
    mongo_user: admin
    mongo_password: admin123 
    git_repo_folder: "/home/vagrant/checkbox.io"
    ansible_python_interpreter: /usr/bin/python3
  environment:
    MONGO_PORT: 3002
    MONGO_IP: 127.0.0.1
    MONGO_USER: "{{ mongo_user }}"
    MONGO_PASSWORD: "{{ mongo_password }}" 
  
  tasks:
  
  - name: add key for mongodb repo
    apt_key:
      keyserver: keyserver.ubuntu.com
      id: 2930ADAE8CAF5059EE73BB4B58712A2291FA4AD5
  
  - name: add mongodb repo
    become: yes
    become_method: sudo
    apt_repository:
      repo: deb https://repo.mongodb.org/apt/ubuntu xenial/mongodb-org/3.6 multiverse
      state: present
  
  - name: install mongodb, nodejs, npm, nginx and pip3
    become: yes
    become_method: sudo
    apt: pkg={{ item }} state=installed update_cache=true cache_valid_time=36000
    with_items: 
    - mongodb-org
    - nodejs
    - npm
    - nginx
    - python3-pip
  
  - name: install pymongo
    pip: 
      name: pymongo
  
  - name: add admin user in mongodb
    mongodb_user:
      database: admin
      name: "{{ mongo_user }}"
      password: "{{ mongo_password }}"
      roles: root
  
  - name: clone checkbox.io repo
    git:
      repo: "https://github.com/chrisparnin/checkbox.io.git"
      dest: "{{ git_repo_folder }}"
      force: yes
  
  - name: copy nginx.conf
    become: yes
    become_method: sudo
    copy:
      remote_src: true
      src: "{{ git_repo_folder }}/local-conf/nginx.conf"
      dest: /etc/nginx/nginx.conf
  
  - name: copy local_conf/default
    become: yes
    become_method: sudo
    copy:
      remote_src: true
      src: "{{ git_repo_folder }}/local-conf/default"
      dest: /etc/nginx/sites-available/default
  
  - name: update root path in default file
    become: yes
    become_method: sudo
    lineinfile:
      path: /etc/nginx/sites-available/default
      regexp: 'root*'
      line: "root {{ git_repo_folder }}/public_html/;"
  
  - name: restart mongodb
    become: yes
    become_method: sudo
    service:
      name: mongod
      state: restarted
      daemon-reload: true
  
  - name: Install Node Modules
    shell: cd {{ git_repo_folder }}/server-side/site ; npm install
    become: yes
  
  - name: Start Node JS
    shell: nohup node server.js &
    become: yes
  
  - name: restart nginx
    become: yes
    become_method: sudo
    service:
      name: nginx
      state: restarted
